#
name: Create and publish a Docker image to ghcr.io

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: uommscrobotics/sfr_gazebo_nav2
  BUILDX_NO_DEFAULT_ATTESTATIONS: 1 # https://github.com/orgs/community/discussions/45969

jobs:
  build-and-push-image:
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
    runs-on: ${{ matrix.arch == 'amd64' && 'ubuntu-latest' || 'ubuntu-24.04-arm' }}
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker images
        id: push_amd64
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.arch }}

  # Based on https://github.com/juanjqo/dockerman/blob/main/.github/workflows/docker-image.yml
  create-and-push-manifest:
      runs-on: ubuntu-latest
      
      permissions:
        contents: read
        packages: write
        attestations: write
        id-token: write
      needs: [build-and-push-image]
      
      steps:
        - name: Set up Docker CLI
          uses: docker/setup-buildx-action@v3
          with:
            install: true

        - name: Log in the container registry
          uses: docker/login-action@v3
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Create and push manifest for latest
          run: |
            docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
              --amend ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:amd64 \
              --amend ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:arm64
  
            docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
